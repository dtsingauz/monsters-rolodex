{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","alt","src","id","name","email","CardList","monsters","map","Search","type","placeholder","value","searchPattern","onInput","e","target","App","updateSearchPattern","newPattern","setState","prevState","state","fetch","then","response","json","users","trimmedSearchPattern","this","trim","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,GCJE,I,kBDIK,SAACC,GAAW,IACtBC,EAAYD,EAAZC,QAER,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aEVLC,EAAW,SAACR,GACvB,OACE,qBAAKE,UAAU,YAAf,SACGF,EAAMS,SAASC,KAAI,SAACT,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCLdM,G,MAAS,SAACX,GACrB,OACE,uBACEE,UAAU,SACVI,KAAK,UACLM,KAAK,OACLC,YAAab,EAAMa,aAAe,GAClCC,MAAOd,EAAMe,eAAiB,GAC9BC,QAAS,SAACC,GAAD,OAAOjB,EAAMgB,QAAQC,EAAEC,OAAOJ,YCgD9BK,E,kDApDb,aAAe,IAAD,8BACZ,gBAwBFC,oBAAsB,SAACC,GACrB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BR,cAAeM,OAxBjB,EAAKG,MAAQ,CACXf,SAAU,CACR,CACEH,KAAM,aAER,CACEA,KAAM,kBAER,CACEA,KAAM,aAGVS,cAAe,IAfL,E,gEAmBO,IAAD,OAClBU,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEb,SAAUoB,S,+BAU7C,IAAMC,EAAuBC,KAAKP,MAAMT,cAAciB,OAChDvB,EAAWsB,KAAKP,MAAMf,SAASwB,QACnC,SAAChC,GAAD,MAC2B,KAAzB6B,GACA7B,EAAQK,KAAK4B,cAAcC,SAASL,EAAqBI,kBAE7D,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZE,cAAegB,KAAKP,MAAMT,cAC1BC,QAASe,KAAKX,sBAEhB,cAAC,EAAD,CAAUX,SAAUA,W,GA/CV2B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0a78a59.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  const { monster } = props;\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search.styles.css\";\r\n\r\nexport const Search = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      name=\"pattern\"\r\n      type=\"text\"\r\n      placeholder={props.placeholder || \"\"}\r\n      value={props.searchPattern || \"\"}\r\n      onInput={(e) => props.onInput(e.target.value)}\r\n    />\r\n  );\r\n};\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/search/search.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n        {\n          name: \"Baba Yaga\",\n        },\n        {\n          name: \"Koschey Undead\",\n        },\n        {\n          name: \"Vodyanoy\",\n        },\n      ],\n      searchPattern: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  updateSearchPattern = (newPattern) => {\n    this.setState((prevState) => ({\n      searchPattern: newPattern,\n    }));\n  };\n\n  render() {\n    const trimmedSearchPattern = this.state.searchPattern.trim();\n    const monsters = this.state.monsters.filter(\n      (monster) =>\n        trimmedSearchPattern === \"\" ||\n        monster.name.toLowerCase().includes(trimmedSearchPattern.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search\n          placeholder=\"Search monster\"\n          searchPattern={this.state.searchPattern}\n          onInput={this.updateSearchPattern}\n        />\n        <CardList monsters={monsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}